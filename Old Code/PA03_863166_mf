CC = gcc
DEBUG = -g
CFLAGS = -Wall -std=c99 -pedantic -c $(DEBUG)
LFLAGS = -Wall -std=c99 -pedantic $(DEBUG)
 

PA03 : MetaDataAccess.o configAccess.o OpQueue.o MemManagement.o prepPCB.o simController.o sysLog.o cpuScheduler.o StringUtils.o pa03.o simtimer.o
	$(CC) $(LFLAGS) MetaDataAccess.o configAccess.o MemManagement.o OpQueue.o prepPCB.o sysLog.o simController.o pa03.o cpuScheduler.o StringUtils.o simtimer.o -pthread -o PA03

pa03.o : pa03.c simController.h
	$(CC) $(CFLAGS) pa03.c

MetaDataAccess.o : MetaDataAccess.c MetaDataAccess.h
	$(CC) $(CFLAGS) MetaDataAccess.c

simController.o : simController.c simController.h
	$(CC) $(CFLAGS) simController.c

MemManagement.o : MemManagement.c MemManagement.h
	$(CC) $(CFLAGS) MemManagement.c

configAccess.o : configAccess.c configAccess.h
	$(CC) $(CFLAGS) configAccess.c

sysLog.o : sysLog.c sysLog.h
	$(CC) $(CFLAGS) sysLog.c

simtimer.o : simtimer.c simtimer.h StringUtils.h
	$(CC) $(CFLAGS) simtimer.c

OpQueue.o : OpQueue.c OpQueue.h
	$(CC) $(CFLAGS) OpQueue.c

cpuScheduler.o : cpuScheduler.c cpuScheduler.h
	$(CC) $(CFLAGS) cpuScheduler.c

prepPCB.o : prepPCB.c prepPCB.h
	$(CC) $(CFLAGS) prepPCB.c

StringUtils.o : StringUtils.c StringUtils.h
	$(CC) $(CFLAGS) StringUtils.c

clean:
	\rm *.o PA02
